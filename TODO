#!/usr/bin/env grep ^-
# Leading characters are - for TODO, + for DONE, X for WONTFIX

SMALL CHANGES:

+ check cleanup: SIGPIPE error -13, caused by Unbound cleanup and improper ev_loop end
+ add dnskey-path to parameters of test/simple-client
+ introduce $<SHELL_PATH> for bin/* and possibly more
+ iterators drop //TODO:OLD//
+ rewrite host names from Unbound SRV: <len>text<len>text without trailing <0>
+ do not drop out with EADDRNOTAVAIL 99 when IPv6 is not available (or...?)
+ consider using socket.c in the kxover_client code: ub2sockaddr and socket/connect
+ build localhost.demo.arpa2.org A override option into simple-client test
+ pypeline should try to detect early termination of programs in arbitrary order
+ pypeline should support tests to fail with (a set of) acceptable exit codes
- kvno in a KX-OFFER should follow the date/policy and available keys
+ get a proper service_name sent to the kxover_client() callback
+ find why tcpwrap.c crashes and leaves no interesting information
+ expose etypes in a ready-to-use fixed derarray for KX-OFFER.etypes (not OPTIONAL)
+ be sure to have an *empty* SEQUENCE in KX-OFFER.extensions (this is not OPTIONAL)
+ find a way to push tlsdate from tcpwrap into kxover_server()
+ derive realm names from incoming KX-REQ during kxover_server() handling
+ polish time handling functions around the KerberosTime format and "now" windowing
- produce and send KX-REP in kxover_server ()
- receive and recognise KX-REP in kxover_client ()

LARGER CHANGES:

+ Have a KXOVER protocol client (in test mode)
+ Have a KXOVER protocol server (in test mode)
+ Actually exchange KX-OFFER messages -- and validate them
- Implement key agreement and storage as Kerberos crossover keys
- Protect the exchange with real TLS (but keep faketls.c for deployment testing)

DESIGN MESMERISATIONS:

- Consider etypes empty -> then require an extension with another purpose
- Consider request and delivery of a service-supplied ticket in an extension
+ Insert max-uses into KEYINFO even if it occurs just once (then with that value)

